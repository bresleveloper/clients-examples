{"version":3,"sources":["./src/app/c/popup/popup.component.ts","./src/app/c/popup/popup.component.html","./src/environments/environment.ts","./src/app/c/rich-text/rich-text.component.ts","./src/app/c/rich-text/rich-text.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/c/rich-text-kolkov/rich-text-kolkov.component.ts","./src/app/c/rich-text-kolkov/rich-text-kolkov.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAMsC;AAOT;;;;;ICX3B,4EAME;IAJA,wTAAiB;IAIjB,8DACF;IAAA,4DAAS;;;IATX,yEACE;IAAA,6DAAY;IACZ,sHAME;IAEJ,4DAAM;;;IAVD,8EAAS;IAGV,0DAAgB;IAAhB,iFAAgB;;;;IAQpB,yEAA6D;IAAxB,2SAAiB;IAAC,4DAAM;;;ADoBtD,MAAM,cAAc;IAMzB;QAJS,aAAQ,GAAG,IAAI,CAAC;QAEf,kBAAa,GAA0B,IAAI,0DAAY,EAAW,CAAC;IAE9D,CAAC;IAEhB,QAAQ,KAAI,CAAC;IAEb,KAAK;QACH,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACxC,CAAC;;4EAbU,cAAc;8FAAd,cAAc;;QC/B3B,0GACE;QAUF,0GAAuD;;QAXxC,6EAAe;QAWzB,0DAAe;QAAf,6EAAe;u7FDQN;YACV,mEAAO,CAAC,QAAQ,EAAE;gBAChB,sEAAU,CAAC,WAAW,EAAE;oBACtB,iEAAK,CAAC,EAAE,SAAS,EAAE,qBAAqB,EAAE,CAAC;oBAC3C,mEAAO,CAAC,GAAG,CAAC;iBACb,CAAC;gBACF,sEAAU,CAAC,WAAW,EAAE;oBACtB,mEAAO,CAAC,GAAG,EAAE,iEAAK,CAAC,EAAE,SAAS,EAAE,qBAAqB,EAAE,CAAC,CAAC;iBAC1D,CAAC;aACH,CAAC;SACH;6FAEU,cAAc;cAhB1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;gBACpC,UAAU,EAAE;oBACV,mEAAO,CAAC,QAAQ,EAAE;wBAChB,sEAAU,CAAC,WAAW,EAAE;4BACtB,iEAAK,CAAC,EAAE,SAAS,EAAE,qBAAqB,EAAE,CAAC;4BAC3C,mEAAO,CAAC,GAAG,CAAC;yBACb,CAAC;wBACF,sEAAU,CAAC,WAAW,EAAE;4BACtB,mEAAO,CAAC,GAAG,EAAE,iEAAK,CAAC,EAAE,SAAS,EAAE,qBAAqB,EAAE,CAAC,CAAC;yBAC1D,CAAC;qBACH,CAAC;iBACH;aACF;sCAGU,QAAQ;kBAAhB,mDAAK;YACG,OAAO;kBAAf,mDAAK;YACI,aAAa;kBAAtB,oDAAM;;;;;;;;;;;;;;;;;;;;;;;;;;AEnCT;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEiB;;;AAS5D,MAAM,iBAAiB;IAO5B;QALA,SAAI,GAAQ,sBAAsB;QAC3B,WAAM,GAAG,8DAAa,CAAC;IAId,CAAC;IAEjB,QAAQ;IACR,CAAC;;kFAVU,iBAAiB;iGAAjB,iBAAiB;QCX9B,oEAAG;QAAA,2EAAgB;QAAA,4DAAI;QAGvB,yEAAqD;;QAA3C,0DAAiB;QAAjB,8EAAiB;;6FDQd,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,gBAAgB,CAAC;QACzB,eAAU,GAAG,KAAK;KACnB;;wEAHY,YAAY;4FAAZ,YAAY;QCLzB,4EAAuD;QAA/C,wKAAkC;QAAa,+DAAI;QAAA,4DAAS;QAEpE,gFACE;QADU,yLAAwB;QAClC,qEAAI;QAAA,sEAAW;QAAA,4DAAK;QACpB,4EAAuD;QAA/C,wKAAkC;QAAa,gEAAK;QAAA,4DAAS;QACvE,4DAAa;QAGb,qEAAI;QAAA,sEAAW;QAAA,4DAAK;QACpB,2EAA+B;QAE/B,sEAAI;QAAA,uEAAW;QAAA,4DAAK;QACpB,4EAA+B;QAG/B,sEAAI;QAAA,2EAAe;QAAA,4DAAK;QACxB,mFAA6C;QAE7C,sEAAI;QAAA,2EAAe;QAAA,4DAAK;QACxB,mFAA6C;;QAjBjC,0DAAwB;QAAxB,mFAAwB;;6FDGvB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACY;AAG0B;AAElB;AAEN;AACM;AAEd;AACY;AACW;AACoB;;AAsBnF,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAVJ;YACP,uEAAa;YACb,4FAAuB;YACvB,0EAAc;YACd,qEAAgB;YAChB,0EAAmB;YACnB,kEAAmB;SAGpB;mIAIU,SAAS,mBAlBlB,2DAAY;QACZ,uEAAc;QACd,kFAAiB;QACjB,uGAAuB,aAGvB,uEAAa;QACb,4FAAuB;QACvB,0EAAc;QACd,qEAAgB;QAChB,0EAAmB;QACnB,kEAAmB;6FAOV,SAAS;cApBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,uEAAc;oBACd,kFAAiB;oBACjB,uGAAuB;iBACxB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,4FAAuB;oBACvB,0EAAc;oBACd,qEAAgB;oBAChB,0EAAmB;oBACnB,kEAAmB;iBAGpB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACpCD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAQ3C,MAAM,uBAAuB;IAElC,gBAAgB,CAAC;IAIjB,QAAQ;IACR,CAAC;;8FAPU,uBAAuB;uGAAvB,uBAAuB;QCRpC,oEAAG;QAAA,kFAAuB;QAAA,4DAAI;QAG9B,+EAAoG;;QAApF,0DAAoC;QAApC,6FAAoC;;6FDKvC,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,WAAW,EAAE,mCAAmC;gBAChD,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  OnChanges,\n  EventEmitter,} from '@angular/core';\nimport {\n  trigger,\n  state,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './popup.component.html',\n  styleUrls: ['./popup.component.css'],\n  animations: [\n    trigger('dialog', [\n      transition('void => *', [\n        style({ transform: 'scale3d(.3, .3, .3)' }),\n        animate(100)\n      ]),\n      transition('* => void', [\n        animate(100, style({ transform: 'scale3d(.0, .0, .0)' }))\n      ])\n    ])\n  ]\n})\nexport class PopupComponent implements OnInit {\n\n  @Input() closable = true;\n  @Input() visible: boolean;\n  @Output() visibleChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  close() {\n    this.visible = false;\n    this.visibleChange.emit(this.visible);\n  }\n\n}\n","<div [@dialog] *ngIf=\"visible\" class=\"dialog\">\n  <ng-content></ng-content>\n  <button\n    *ngIf=\"closable\"\n    (click)=\"close()\"\n    aria-label=\"Close\"\n    class=\"dialog__close-btn\"\n  >\n    X\n  </button>\n</div>\n<div *ngIf=\"visible\" class=\"overlay\" (click)=\"close()\"></div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\n\n\n@Component({\n  selector: 'app-rich-text',\n  templateUrl: './rich-text.component.html',\n  styleUrls: ['./rich-text.component.css']\n})\nexport class RichTextComponent implements OnInit {\n\n  html:string=\"<p>Hello, world!</p>\"\n  public Editor = ClassicEditor;\n\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>rich-text works!</p>\n\n\n<ckeditor [editor]=\"Editor\" [data]=\"html\"></ckeditor>\n\n\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'dialog-example';\n  showDialog = false\n}\n","\n\n<button (click)=\"showDialog = !showDialog\" class=\"btn\">Open</button>\n\n<app-dialog [(visible)]=\"showDialog\">\n  <h1>Hello World</h1>\n  <button (click)=\"showDialog = !showDialog\" class=\"btn\">Close</button>\n</app-dialog>\n\n\n<h1>CK editor 1</h1>\n<app-rich-text></app-rich-text>\n\n<h1>CK editor 2</h1>\n<app-rich-text></app-rich-text>\n\n\n<h1>kolkov editor 1</h1>\n<app-rich-text-kolkov></app-rich-text-kolkov>\n\n<h1>kolkov editor 1</h1>\n<app-rich-text-kolkov></app-rich-text-kolkov>\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\n\nimport { HttpClientModule} from '@angular/common/http';\nimport { AngularEditorModule } from '@kolkov/angular-editor';\n\nimport { AppComponent } from './app.component';\nimport { PopupComponent } from './c/popup/popup.component';\nimport { RichTextComponent } from './c/rich-text/rich-text.component';\nimport { RichTextKolkovComponent } from './c/rich-text-kolkov/rich-text-kolkov.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PopupComponent,\n    RichTextComponent,\n    RichTextKolkovComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CKEditorModule,\n    HttpClientModule,\n    AngularEditorModule,\n    ReactiveFormsModule\n\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-rich-text-kolkov',\n  templateUrl: './rich-text-kolkov.component.html',\n  styleUrls: ['./rich-text-kolkov.component.css']\n})\nexport class RichTextKolkovComponent implements OnInit {\n\n  constructor() { }\n\n  htmlContent:FormControl;\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>rich-text-kolkov works!</p>\n\n\n<angular-editor [placeholder]=\"'Enter text here...'\" formControlName=\"htmlContent\"></angular-editor>\n\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}